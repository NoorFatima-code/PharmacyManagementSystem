/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pharmacymanagmentsystem;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class UpdateCustomerPanel extends javax.swing.JPanel {

   
    private Customer_Manager customerManager;
    private Customer selectedCustomer = null;

    public UpdateCustomerPanel(Customer_Manager customerManager) {
        this.customerManager = customerManager;
        setLayout(new BorderLayout());

        // üîç Search Panel
        JPanel searchPanel = new JPanel(new FlowLayout(FlowLayout.LEFT, 10, 10));
        JComboBox<String> searchTypeBox = new JComboBox<>(new String[]{"By ID", "By Name"});
        JTextField searchField = new JTextField(15);
        JButton searchBtn = new JButton("üîç");

        searchBtn.setPreferredSize(new Dimension(50, 25));
        searchPanel.add(new JLabel("Search:"));
        searchPanel.add(searchTypeBox);
        searchPanel.add(searchField);
        searchPanel.add(searchBtn);

        // ‚úèÔ∏è Update Fields Panel (No ID Field)
        JPanel formPanel = new JPanel(new GridLayout(3, 2, 10, 10));
        JTextField nameField = new JTextField();
        JTextField contactField = new JTextField();
        JButton updateBtn = new JButton("Update");

        formPanel.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 20));
        formPanel.add(new JLabel("Name:"));
        formPanel.add(nameField);
        formPanel.add(new JLabel("Contact No.:"));
        formPanel.add(contactField);
        formPanel.add(new JLabel()); // Empty
        formPanel.add(updateBtn);

        // Add to layout
        add(searchPanel, BorderLayout.NORTH);
        add(formPanel, BorderLayout.CENTER);

        // üîç Search Logic
        searchBtn.addActionListener(e -> {
            String keyword = searchField.getText().trim();
            String type = (String) searchTypeBox.getSelectedItem();
            selectedCustomer = null;

            customerManager.loadCustomersFromDatabase(); // ‚úÖ Always refresh

            for (Customer c : customerManager.getCustomerList()) {
                if (type.equals("By ID") && c.getCustomerID().equalsIgnoreCase(keyword)) {
                    selectedCustomer = c;
                    break;
                } else if (type.equals("By Name") && c.getName().equalsIgnoreCase(keyword)) {
                    selectedCustomer = c;
                    break;
                }
            }

            if (selectedCustomer != null) {
                nameField.setText(selectedCustomer.getName());
                contactField.setText(selectedCustomer.getContactNumber());
            } else {
                JOptionPane.showMessageDialog(this, "Customer not found.");
                nameField.setText("");
                contactField.setText("");
            }
        });

        // ‚úÖ Update Logic
        updateBtn.addActionListener(e -> {
            if (selectedCustomer == null) {
                JOptionPane.showMessageDialog(this, "Please search and select a customer first.");
                return;
            }

            String newName = nameField.getText().trim();
            String newContact = contactField.getText().trim();

            selectedCustomer.setName(newName);
            selectedCustomer.setContactNumber(newContact);

            boolean success = customerManager.updateCustomerInDatabase(selectedCustomer); // ‚úÖ DB update

            if (success) {
                JOptionPane.showMessageDialog(this, "Customer updated successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Update failed.");
            }

            nameField.setText("");
            contactField.setText("");
            selectedCustomer = null;
        });
    }

    public UpdateCustomerPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
