package pharmacymanagmentsystem;

import javax.swing.*;
import java.awt.*;
import java.sql.*;

public class LoginPanel extends JPanel {
    private JTextField usernameField;
    private JPasswordField passwordField;
    private JCheckBox showPasswordCheckBox;
    private JButton loginButton;
    private LoginPage loginPage; // ðŸ‘ˆ updated type

    // Default constructor (GUI builder)
    public LoginPanel() {
        initComponents();
    }

 

  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
     

    // ðŸ‘‡ Main constructor used in LoginPage
    public LoginPanel(LoginPage loginPage) {
        this(); // init GUI
        this.loginPage = loginPage;

        setLayout(new GridLayout(5, 2, 10, 10));
        setBorder(BorderFactory.createEmptyBorder(20, 40, 20, 40));
        setBackground(new Color(240, 248, 255));

        // Username field
        JPanel userPanel = new JPanel(new GridLayout(1, 4, 10, 10));
        userPanel.setBackground(getBackground());
        userPanel.add(new JLabel("Username:"));
        usernameField = new JTextField();
        userPanel.add(usernameField);

        // Password field
        JPanel passPanel = new JPanel(new GridLayout(1, 4, 10, 10));
        passPanel.setBackground(getBackground());
        passPanel.add(new JLabel("Password:"));
        passwordField = new JPasswordField();
        passPanel.add(passwordField);

        // Show password checkbox
        showPasswordCheckBox = new JCheckBox("Show Password");
        showPasswordCheckBox.setBackground(getBackground());
        showPasswordCheckBox.addActionListener(e -> {
            passwordField.setEchoChar(showPasswordCheckBox.isSelected() ? (char) 0 : 'â€¢');
        });

        // Login button
        loginButton = new JButton("Login");
        loginButton.setBackground(new Color(173, 216, 230));
        loginButton.addActionListener(e -> login());

        // Add components
        add(userPanel);
        add(passPanel);
        add(showPasswordCheckBox);
        add(new JLabel(""));
        add(loginButton);
    }

    private void login() {
        String username = usernameField.getText();
        String password = new String(passwordField.getPassword());

        try (Connection conn = DBConnection.getConnection()) {
            String query = "SELECT * FROM users WHERE username = ? AND password = ?";
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.setString(1, username);
            stmt.setString(2, password);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "Login Successful!");

                // âœ… Tell LoginPage to switch to dashboard panel
                loginPage.showDashboard(username);

            } else {
                JOptionPane.showMessageDialog(this, "Invalid Username or Password", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database Error: " + e.getMessage());
            e.printStackTrace();
        }
    }

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
    
}
