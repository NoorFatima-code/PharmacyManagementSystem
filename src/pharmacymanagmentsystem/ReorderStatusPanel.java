/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pharmacymanagmentsystem;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mapple.pk
 */
public class ReorderStatusPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReorderStatusPanel
     */
    public ReorderStatusPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

  private MedicineManager manager;
    private JTable resultTable;
    private DefaultTableModel tableModel;

    public ReorderStatusPanel(MedicineManager manager) {
        this.manager = manager;
        setLayout(new BorderLayout(10, 10));

        // Button
        JButton checkButton = new JButton("Check Reorder Status");

        // Column names
        String[] columns = {"ID", "Name", "Type", "Price", "Stock", "Expiry", "Reorder Level", "Prescription", "Manufacturer"};
        tableModel = new DefaultTableModel(columns, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Make cells non-editable
            }
        };
        resultTable = new JTable(tableModel);
        JScrollPane scrollPane = new JScrollPane(resultTable);

        // Button action
        checkButton.addActionListener(e -> {
            manager.loadMedicinesFromDatabase();
            List<Medicine> meds = manager.getMedicinesNeedingReorderFromDB();
            tableModel.setRowCount(0); // clear previous
            if (meds.isEmpty()) {
                JOptionPane.showMessageDialog(this, "All medicines have sufficient stock.");
            } else {
                for (Medicine m : meds) {
                    tableModel.addRow(new Object[]{
                        m.getMedicineID(),
                        m.getName(),
                        m.getType(),
                        m.getPrice(),
                        m.getStockQuantity(),
                        m.getExpiryDate(),
                        m.getReorderLevel(),
                        m.getRequiresPrescription(),
                        m.getManufacturer().getName()
                    });
                }
            }
        });

        add(checkButton, BorderLayout.NORTH);
        add(scrollPane, BorderLayout.CENTER);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
