/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pharmacymanagmentsystem;
import pharmacymanagmentsystem.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mapple.pk
 */
public class ViewMedicinePanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewMedicinePanel
     */
    public ViewMedicinePanel() {
        initComponents();
    }

       private MedicineManager manager;
    private JTable table;
    private JTextField searchField;
    private JComboBox<String> searchTypeBox;

    public ViewMedicinePanel(MedicineManager manager) {
        this.manager = manager;
        setLayout(new BorderLayout(10, 10));

        JPanel headerPanel = new JPanel();
        // Top Panel for Search and Refresh
        JPanel topPanel = new JPanel(new FlowLayout());

        searchField = new JTextField(15);
        searchTypeBox = new JComboBox<>(new String[]{"Search by ID", "Search by Name"});
        JButton searchBtn = new JButton("Search");
        JButton refreshBtn = new JButton("Refresh All");

        topPanel.add(searchField);
        topPanel.add(searchTypeBox);
        topPanel.add(searchBtn);
        topPanel.add(refreshBtn);

headerPanel.setLayout(new BorderLayout());



//headerPanel.add(title, BorderLayout.NORTH);     // Title on top
headerPanel.add(topPanel, BorderLayout.SOUTH); 
        // Table
        table = new JTable();
        JScrollPane scrollPane = new JScrollPane(table);
       manager.loadMedicinesFromDatabase(); // Initially load all

        // Action Listeners
        refreshBtn.addActionListener(e ->loadAllMedicines() );

        searchBtn.addActionListener(e -> {
            String query = searchField.getText().trim();
            if (query.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Enter a search term.");
                return;
            }

            Medicine result = null;
            if (searchTypeBox.getSelectedItem().equals("Search by ID")) {
                result = manager.findMedicineByID_DB(query);
            } else {
                result = manager.findMedicineByName_DB(query);
            }

            if (result != null) {
                setTableData(List.of(result));
            } else {
                JOptionPane.showMessageDialog(this, "No medicine found.");
                table.setModel(new DefaultTableModel()); // Clear table
            }
        });

        add(topPanel, BorderLayout.NORTH);
        add(scrollPane, BorderLayout.CENTER);
       add(headerPanel,BorderLayout.WEST);
    }

    private void loadAllMedicines() {
    manager.loadMedicinesFromDatabase(); // DB سے fresh data
    List<Medicine> list = manager.getAllMedicines(); // memory list کو دکھائے
    setTableData(list);
}

    

    private void setTableData(List<Medicine> meds) {
        String[] columns = {"ID", "Name", "Type", "Price", "Stock", "Expiry", "Reorder", "Prescription", "Manufacturer"};
        String[][] data = new String[meds.size()][columns.length];

        for (int i = 0; i < meds.size(); i++) {
            Medicine m = meds.get(i);
            data[i][0] = m.getMedicineID();
            data[i][1] = m.getName();
            data[i][2] = m.getType();
            data[i][3] = String.valueOf(m.getPrice());
            data[i][4] = String.valueOf(m.getStockQuantity());
            data[i][5] = m.getExpiryDate();
            data[i][6] = String.valueOf(m.getReorderLevel());
            data[i][7] = String.valueOf(m.getRequiresPrescription());
            data[i][8] = m.getManufacturer().getName();
        }

        table.setModel(new DefaultTableModel(data, columns));
     
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
